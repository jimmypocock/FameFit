name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Show Xcode version
      run: xcodebuild -version
    
    - name: Cache Swift Package Manager
      uses: actions/cache@v4
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    
    # Install SwiftLint for code quality checks
    - name: Install SwiftLint
      run: brew install swiftlint
    
    # Run SwiftLint
    - name: Lint code
      run: |
        swiftlint lint --reporter github-actions-logging || true
    
    # Build the WatchKit Extension
    - name: Build WatchKit Extension
      run: |
        xcodebuild build \
          -project "FameFit.xcodeproj" \
          -scheme "FameFit Watch App" \
          -destination "platform=watchOS Simulator,name=Apple Watch Series 10 (46mm)" \
          -configuration Debug \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          ONLY_ACTIVE_ARCH=NO \
          | xcpretty --simple --color --report junit
    
    # Run tests
    - name: Run tests
      run: |
        xcodebuild test \
          -project "FameFit.xcodeproj" \
          -scheme "FameFit Watch App" \
          -destination "platform=watchOS Simulator,name=Apple Watch Series 10 (46mm)" \
          -configuration Debug \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          -enableCodeCoverage YES \
          | xcpretty --simple --color --report junit
    
    # Upload test results
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: build/reports/junit.xml
    
    # Generate code coverage report
    - name: Generate coverage report
      run: |
        xcrun llvm-cov export \
          -format="lcov" \
          -instr-profile=$(find . -name "*.profdata" | head -1) \
          $(find . -name "*.app" | head -1) \
          > coverage.lcov
      continue-on-error: true
    
    # Upload coverage to Codecov (optional)
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.lcov
        fail_ci_if_error: false
        verbose: true
      continue-on-error: true

  analyze:
    name: Static Analysis
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    # Run static analyzer
    - name: Analyze code
      run: |
        xcodebuild analyze \
          -project "FameFit.xcodeproj" \
          -scheme "FameFit Watch App" \
          -destination "platform=watchOS Simulator,name=Apple Watch Series 10 (46mm)" \
          -configuration Debug \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          ONLY_ACTIVE_ARCH=NO \
          | xcpretty --simple --color
      continue-on-error: true